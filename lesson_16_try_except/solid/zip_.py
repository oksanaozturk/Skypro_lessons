# Zip () – это функция Python, которая позволяет объединить в кортежи элементы нескольких списков,
# кортежей или других итерируемых объектов, чтобы потом можно было обработать все кортежи в цикле.
# Например: Список 1 Список 2
# Зип-объект 1 a (1, ‘a’) 2 b (2, ‘b’) 3 c (3, ‘c’).
# Zip () возвращает итератор, поэтому можно легко обойти его в цикле:

num = [1, 2, 3]
color = ['red', 'white', 'blue']
for n, c in zip(num, color):
    print(n, c)


# list1 Функция zip() позволяет объединить несколько списков в один,
# каждый элемент которого будет состоять из соответствующих элементов исходных списков
list1 = [1, 2, 3]
list2 = ['a', 'b', 'c']
list3 = [True, False, True]
result = list(zip(list1, list2, list3))
print(result) # [(1, 'a', True), (2, 'b', False), (3, 'c', True)]


# Также с помощью функции zip() можно создать словарь, передав ей два списка,
# первый из которых будет использован в качестве ключей, а второй – в качестве значений:
keys = ['a', 'b', 'c']
values = [1, 2, 3]
result = dict(zip(keys, values))
print(result) # {'a': 1, 'b': 2, 'c': 3}


# Функция zip() останавливает свою работу, когда наименьший из переданных ей объектов закончится,
# поэтому при объединении списков разной длины результат будет содержать только элементы, которые удалось объединить.


# Функция zip() также может использоваться для распаковки кортежей, содержащих значения. Пример:
coordinates = [(1, 2), (3, 4), (5, 6)]

x_values, y_values = zip(*coordinates)

print(x_values)
print(y_values)


